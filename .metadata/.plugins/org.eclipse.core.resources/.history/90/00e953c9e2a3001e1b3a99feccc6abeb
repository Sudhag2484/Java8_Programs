package in.sudha.array;

import java.util.Arrays;
import java.util.Comparator;
import java.util.HashMap;
/*
public class SortArrayByFrequency {

	public static void main(String[] args) {

		int[] input= {12,1,3,12,1,1,1,2,2,3,33,2,2,2};
		
		int[] output = sortByFre(input);
		System.out.println(Arrays.toString(output));
	}

	private static int[] sortByFre(int[] input) {
		
		   HashMap<Integer, Integer> freqMap = new HashMap<>();
		   for(int num:input) {
			   freqMap.put(num, freqMap.getOrDefault(num, 0)+1);
		   }
		 Comparator<Integer>  freqComparator=(num1,num2)->{
			int frq1= freqMap.get(num1);
			int frq2= freqMap.get(num2);
			
			if(frq1==frq2) {
				return Integer.compare(num1, num2);
			}
			return Integer.compare(frq1, frq2);

		   };
		 Arrays.sort(input);
		return input;
		
	}

}
*/
import java.util.*;

public class SortArrayByFrequency {
    public static void main(String[] args) {
        int[] input = {7, 1, 3, 4, 7, 1, 7, 1, 4, 5, 1, 9, 3};

        int[] output = sortByFrequency(input);

        System.out.println(Arrays.toString(output));
    }

    private static int[] sortByFrequency(int[] arr) {
        // Step 1: Create a HashMap to store frequency of each element
        Map<Integer, Integer> frequencyMap = new HashMap<>();
        for (int num : arr) {
            frequencyMap.put(num, frequencyMap.getOrDefault(num, 0) + 1);
        }

        // Step 2: Create a custom comparator to compare elements based on frequency
        Comparator<Integer> frequencyComparator = (num1, num2) -> {
            int freq1 = frequencyMap.get(num1);
            int freq2 = frequencyMap.get(num2);

            if (freq1 == freq2) {
                return Integer.compare(num1, num2); // If frequencies are equal, sort by value
            }

            return Integer.compare(freq2, freq1); // Sort by frequency in descending order
        };

        // Step 3: Sort the array using the custom comparator
        Arrays.sort(arr,);

        return arr;
    }
}
